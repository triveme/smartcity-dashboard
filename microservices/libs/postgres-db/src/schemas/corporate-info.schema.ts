import { sql } from 'drizzle-orm';
import { pgTable, text, uuid, boolean } from 'drizzle-orm/pg-core';
import { logos } from './logo.schema';
import { tenants } from './tenant.schema';
import { corporateInfoFontFamiliesTypeEnum } from './enums.schema';
import { titleBarThemeTypeEnum } from './enums.schema';

export const corporateInfos = pgTable('corporate_info', {
  id: uuid('id')
    .primaryKey()
    .default(sql`gen_random_uuid()`),
  tenantId: text('tenant_id').references(() => tenants.abbreviation, {
    onUpdate: 'cascade',
  }),
  barChartAxisLabelSize: text('bar_chart_axis_label_size'),
  barChartAxisLabelColor: text('bar_chart_axis_label_color'),
  barChartAxisLabelFontColor: text('bar_chart_axis_label_font_color'),
  barChartAxisLineColor: text('bar_chart_axis_line_color'),
  barChartAxisTicksFontSize: text('bar_chart_axis_ticks_font_size'),
  barChartCurrentValuesColors: text('bar_chart_current_values_colors').array(),
  barChartFilterColor: text('bar_chart_filter_color'),
  barChartFilterTextColor: text('bar_chart_filter_text_color'),
  barChartGridColor: text('bar_chart_grid_color'),
  barChartLegendFontSize: text('bar_chart_legend_font_size'),
  barChartLegendFontColor: text('bar_chart_legend_font_color'),
  barChartTicksFontColor: text('bar_chart_ticks_font_color'),
  cancelButtonColor: text('cancel_button_color'),
  cancelHoverButtonColor: text('cancel_hover_button_color'),
  coloredSliderArrowColor: text('colored_slider_arrow_color'),
  coloredSliderBigValueFontColor: text('colored_slider_big_value_font_color'),
  coloredSliderBigValueFontSize: text('colored_slider_big_value_font_size'),
  coloredSliderLabelFontColor: text('colored_slider_label_font_color'),
  coloredSliderLabelFontSize: text('colored_slider_label_font_size'),
  coloredSliderUnitFontSize: text('colored_slider_unit_font_size'),
  dashboardFontColor: text('dashboard_font_color'),
  dashboardPrimaryColor: text('dashboard_primary_color'),
  dashboardSecondaryColor: text('dashboard_secondary_color'),
  dashboardHeadlineFontSize: text('dashboard_headline_font_size'),
  degreeChart180BgColor: text('degree_chart_180_bg_color'),
  degreeChart180FillColor: text('degree_chart_180_fill_color'),
  degreeChart180FontColor: text('degree_chart_180_font_color'),
  degreeChart180FontSize: text('degree_chart_180_font_size'),
  degreeChart180UnitFontSize: text('degree_chart_180_unit_font_size'),
  degreeChart360BgColor: text('degree_chart_360_bg_color'),
  degreeChart360FillColor: text('degree_chart_360_fill_color'),
  degreeChart360FontColor: text('degree_chart_360_font_color'),
  degreeChart360FontSize: text('degree_chart_360_font_size'),
  degreeChart360UnitFontSize: text('degree_chart_360_unit_font_size'),
  fontColor: text('font_color').notNull(),
  fontFamily: corporateInfoFontFamiliesTypeEnum('font_family').notNull(),
  headerFontColor: text('header_font_color'),
  headerLogoId: uuid('header_logo_id').references(() => logos.id),
  headerPrimaryColor: text('header_primary_color'),
  headerSecondaryColor: text('header_secondary_color'),
  headerTitleAdmin: text('header_title_admin'),
  headerTitleDashboards: text('header_title_dashboards'),
  iconWithLinkFontColor: text('icon_with_link_font_color'),
  iconWithLinkFontSize: text('icon_with_link_font_size'),
  iconWithLinkIconColor: text('icon_with_link_icon_color'),
  iconWithLinkIconSize: text('icon_with_link_icon_size'),
  informationTextFontColor: text('information_text_font_color'),
  informationTextFontSize: text('information_text_font_size'),
  lineChartAxisLabelFontColor: text('line_chart_axis_label_font_color'),
  lineChartAxisLabelSize: text('line_chart_axis_label_size'),
  lineChartAxisLineColor: text('line_chart_axis_line_color'),
  lineChartAxisTicksFontSize: text('line_chart_axis_ticks_font_size'),
  lineChartCurrentValuesColors: text(
    'line_chart_current_values_colors',
  ).array(),
  lineChartFilterColor: text('line_chart_filter_color'),
  lineChartFilterTextColor: text('line_chart_filter_text_color'),
  lineChartGridColor: text('line_chart_grid_color'),
  lineChartLegendFontSize: text('line_chart_legend_font_size'),
  lineChartLegendFontColor: text('line_chart_legend_font_color'),
  lineChartTicksFontColor: text('line_chart_ticks_font_color'),
  logo: text('logo'),
  measurementChartAxisLabelFontColor: text(
    'measurement_chart_axis_label_font_color',
  ),
  measurementChartAxisLineColor: text('measurement_chart_axis_line_color'),
  measurementChartAxisTicksFontColor: text(
    'measurement_chart_axis_ticks_font_color',
  ),
  measurementChartBarColor: text('measurement_chart_bar_color'),
  measurementChartBigValueFontColor: text(
    'measurement_chart_big_value_font_color',
  ),
  measurementChartBigValueFontSize: text(
    'measurement_chart_big_value_font_size',
  ),
  measurementChartCardsBgColor: text('measurement_chart_cards_bg_color'),
  measurementChartCardsFontColor: text('measurement_chart_cards_font_color'),
  measurementChartCardsIconColors: text(
    'measurement_chart_cards_icon_colors',
  ).array(),
  measurementChartCurrentValuesColors: text(
    'measurement_chart_current_values_colors',
  ).array(),
  measurementChartGridColor: text('measurement_chart_grid_color'),
  measurementChartLabelFontColor: text('measurement_chart_label_font_color'),
  measurementChartTopButtonBgColor: text(
    'measurement_chart_top_button_bg_color',
  ),
  measurementChartTopButtonFontColor: text(
    'measurement_chart_top_button_font_color',
  ),
  measurementChartTopButtonHoverColor: text(
    'measurement_chart_top_button_hover_color',
  ),
  measurementChartTopButtonInactiveBgColor: text(
    'measurement_chart_top_button_inactive_bg_color',
  ),
  menuActiveColor: text('menu_active_color'),
  menuActiveFontColor: text('menu_active_font_color'),
  menuFontColor: text('menu_font_color'),
  menuHoverColor: text('menu_hover_color'),
  menuLogoId: uuid('menu_logo_id').references(() => logos.id),
  menuPrimaryColor: text('menu_primary_color'),
  menuSecondaryColor: text('menu_secondary_color'),
  panelBorderColor: text('panel_border_color'),
  panelBorderRadius: text('panel_border_radius'),
  panelBorderSize: text('panel_border_size'),
  panelFontColor: text('panel_font_color'),
  panelHeadlineFontSize: text('panel_headline_font_size'),
  panelPrimaryColor: text('panel_primary_color'),
  panelSecondaryColor: text('panel_secondary_color'),
  pieChartFontColor: text('pie_chart_font_color'),
  pieChartFontSize: text('pie_chart_font_size'),
  pieChartCurrentValuesColors: text('pie_chart_current_values_colors').array(),
  saveButtonColor: text('save_button_color'),
  saveHoverButtonColor: text('save_hover_button_color'),
  scrollbarBackground: text('scrollbar_background'),
  scrollbarColor: text('scrollbar_color'),
  showHeaderLogo: boolean('show_header_logo'),
  showMenuLogo: boolean('show_menu_logo'),
  stageableChartFontColor: text('stageable_chart_font_color'),
  stageableChartFontSize: text('stageable_chart_font_size'),
  stageableChartTicksFontColor: text('stageable_chart_ticks_font_color'),
  stageableChartTicksFontSize: text('stageable_chart_ticks_font_size'),
  titleBar: titleBarThemeTypeEnum('title_bar').notNull(),
  useColorTransitionHeader: boolean('use_color_transition_header'),
  useColorTransitionMenu: boolean('use_color_transition_menu'),
  wertFontColor: text('wert_font_color'),
  widgetHeadlineFontSize: text('widget_headline_font_size'),
  widgetSubheadlineFontSize: text('widget_subheadline_font_size'),
  wertFontSize: text('wert_font_size'),
  wertUnitFontSize: text('wert_unit_font_size'),
  widgetBorderColor: text('widget_border_color'),
  widgetBorderRadius: text('widget_border_radius'),
  widgetBorderSize: text('widget_border_size'),
  widgetFontColor: text('widget_font_color'),
  widgetPrimaryColor: text('widget_primary_color'),
  widgetSecondaryColor: text('widget_secondary_color'),
});

export type CorporateInfo = typeof corporateInfos.$inferSelect;
export type NewCorporateInfo = typeof corporateInfos.$inferInsert;
